# Base Image
FROM ubuntu:22.04

# Set environment variables
ENV TZ=Europe/Amsterdam
ENV PHP_VERSION=8.1
ENV APACHE_DOCROOT=/var/www/html/public/tests/Application/public
ENV NODE_VERSION=18
ENV SHOP_DOMAIN=localhost
ENV XDEBUG_ENABLED=0
ENV XDEBUG_REMOTE_HOST="host.docker.internal"
ENV XDEBUG_CONFIG="idekey=PHPSTORM"
ENV PHP_IDE_CONFIG="serverName=localhost"

# Set timezone and update system
RUN ln -fs /usr/share/zoneinfo/$TZ /etc/localtime && \
    apt-get update && \
    apt-get install -y tzdata && \
    dpkg-reconfigure --frontend noninteractive tzdata

# Install base dependencies
RUN apt-get install -y --no-install-recommends \
    sudo wget curl unzip bzip2 gnupg2 \
    libnss3-tools nano jq lsof \
    openssh-server cron vim \
    software-properties-common \
    rsync sshpass jpegoptim screen mysql-client git

# Add PHP repository and install PHP 8.1 with necessary extensions
RUN apt-get update && \
    apt-get install -y php${PHP_VERSION}-fpm \
    php${PHP_VERSION}-cli \
    php${PHP_VERSION}-gd \
    php${PHP_VERSION}-iconv \
    php${PHP_VERSION}-intl \
    php${PHP_VERSION}-xml \
    php${PHP_VERSION}-mbstring \
    php${PHP_VERSION}-pdo \
    php${PHP_VERSION}-mysql \
    php${PHP_VERSION}-curl \
    php${PHP_VERSION}-ldap \
    php${PHP_VERSION}-pgsql \
    php${PHP_VERSION}-gettext \
    php${PHP_VERSION}-zip \
    php${PHP_VERSION}-soap \
    php${PHP_VERSION}-bcmath \
    php${PHP_VERSION}-imap \
    php${PHP_VERSION}-redis \
    php${PHP_VERSION}-ssh2 \
    php${PHP_VERSION}-pcov \
    php${PHP_VERSION}-sqlite3 \
    php${PHP_VERSION}-apcu \
    php-pear \
    php-dev && \
    apt-get clean && rm -rf /var/lib/apt/lists/* /var/cache/apt/*

# Install Xdebug
RUN pecl install xdebug && \
    echo "zend_extension=$(find /usr/lib/php/ -name xdebug.so)" > /etc/php/${PHP_VERSION}/mods-available/xdebug.ini && \
    echo "xdebug.mode=debug" >> /etc/php/${PHP_VERSION}/mods-available/xdebug.ini && \
    ln -s /etc/php/${PHP_VERSION}/mods-available/xdebug.ini /etc/php/${PHP_VERSION}/cli/conf.d/20-xdebug.ini

# Install Apache
RUN apt-get update && \
    apt-get install -y apache2 libapache2-mod-fcgid && \
    a2enmod headers rewrite expires proxy proxy_http proxy_wstunnel actions fcgid alias proxy_fcgi http2 && \
    a2enconf php${PHP_VERSION}-fpm && \
    rm -rf /var/lib/apt/lists/* /var/cache/apt/*

# Copy Apache configurations
COPY ./config/apache/apache2.conf /etc/apache2/apache2.conf
COPY ./config/apache/ports.conf /etc/apache2/ports.conf
COPY ./config/apache/sites.conf /etc/apache2/sites-enabled/000-default.conf

# Install Composer
RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer

# Install Node.js and Yarn
RUN apt-get update && apt-get install -y curl && \
    curl -fsSL https://deb.nodesource.com/gpgkey/nodesource-repo.gpg.key | gpg --dearmor -o /usr/share/keyrings/nodesource.gpg && \
    echo "deb [signed-by=/usr/share/keyrings/nodesource.gpg] https://deb.nodesource.com/node_$NODE_VERSION.x nodistro main" | tee /etc/apt/sources.list.d/nodesource.list && \
    apt-get update && apt-get install -y nodejs && \
    npm install -g yarn

# Setup User Management
RUN useradd -m -d /var/www -s /bin/bash mollie && \
    usermod -aG sudo mollie && \
    echo 'mollie:mollie' | chpasswd && \
    echo 'Defaults:mollie !requiretty' >> /etc/sudoers && \
    chown -R mollie:mollie /var/www

# Copy necessary scripts and configs
COPY ./assets/scripts/bin /var/www/scripts/bin
COPY ./config/php/general.ini /etc/php/${PHP_VERSION}/fpm/conf.d/01-general.ini
COPY ./config/php/general.ini /etc/php/${PHP_VERSION}/cli/conf.d/01-general.ini
COPY ./config/php/cli.ini /etc/php/${PHP_VERSION}/cli/conf.d/01-general-cli.ini

# Ensure correct permissions
RUN chown -R mollie:mollie /var/www/scripts && \
    chmod -R 0755 /var/www/scripts

# Set work directory
WORKDIR /var/www/html

# Switch to non-root user
USER mollie

# Start container
ENTRYPOINT ["/bin/bash"]
